package com.mainconcept.rewsservice;

import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.0.1
 * 2015-01-26T19:01:41.335+08:00
 * Generated source version: 3.0.1
 * 
 */
@WebService(targetNamespace = "http://service.rews.mainconcept.com", name = "REWSPortType")
@XmlSeeAlso({ObjectFactory.class})
public interface REWSPortType {

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:getRewsConfig", output = "urn:getRewsConfigResponse")
    @RequestWrapper(localName = "getRewsConfig", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetRewsConfig")
    @WebMethod(action = "urn:getRewsConfig")
    @ResponseWrapper(localName = "getRewsConfigResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetRewsConfigResponse")
    public java.util.List<java.lang.String> getRewsConfig(
        @WebParam(name = "reserved", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String reserved
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:verifyPath", output = "urn:verifyPathResponse")
    @RequestWrapper(localName = "verifyPath", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.VerifyPath")
    @WebMethod(action = "urn:verifyPath")
    @ResponseWrapper(localName = "verifyPathResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.VerifyPathResponse")
    public java.util.List<com.mainconcept.rewsservice.LocationState> verifyPath(
        @WebParam(name = "path", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String path,
        @WebParam(name = "path1", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String path1,
        @WebParam(name = "serverName", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String serverName
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:setPresetGroupUserGroups", output = "urn:setPresetGroupUserGroupsResponse")
    @RequestWrapper(localName = "setPresetGroupUserGroups", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.SetPresetGroupUserGroups")
    @WebMethod(action = "urn:setPresetGroupUserGroups")
    @ResponseWrapper(localName = "setPresetGroupUserGroupsResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.SetPresetGroupUserGroupsResponse")
    public java.lang.Boolean setPresetGroupUserGroups(
        @WebParam(name = "presetGroupName", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String presetGroupName,
        @WebParam(name = "userGroupNames", targetNamespace = "http://service.rews.mainconcept.com")
        java.util.List<java.lang.String> userGroupNames
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:getLastError", output = "urn:getLastErrorResponse")
    @RequestWrapper(localName = "getLastError", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetLastError")
    @WebMethod(action = "urn:getLastError")
    @ResponseWrapper(localName = "getLastErrorResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetLastErrorResponse")
    public java.lang.String getLastError(
        @WebParam(name = "reserved", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String reserved
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:listCategories", output = "urn:listCategoriesResponse")
    @RequestWrapper(localName = "listCategories", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.ListCategories")
    @WebMethod(action = "urn:listCategories")
    @ResponseWrapper(localName = "listCategoriesResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.ListCategoriesResponse")
    public java.util.List<com.mainconcept.rewsservice.Category> listCategories(
        @WebParam(name = "reserved", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String reserved
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:listAuths", output = "urn:listAuthsResponse")
    @RequestWrapper(localName = "listAuths", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.ListAuths")
    @WebMethod(action = "urn:listAuths")
    @ResponseWrapper(localName = "listAuthsResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.ListAuthsResponse")
    public java.util.List<java.lang.String> listAuths(
        @WebParam(name = "reserved", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String reserved
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:listPresetGroups", output = "urn:listPresetGroupsResponse")
    @RequestWrapper(localName = "listPresetGroups", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.ListPresetGroups")
    @WebMethod(action = "urn:listPresetGroups")
    @ResponseWrapper(localName = "listPresetGroupsResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.ListPresetGroupsResponse")
    public java.util.List<com.mainconcept.rewsservice.PresetGroup> listPresetGroups(
        @WebParam(name = "reserved", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String reserved
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:addRule", output = "urn:addRuleResponse")
    @RequestWrapper(localName = "addRule", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.AddRule")
    @WebMethod(action = "urn:addRule")
    @ResponseWrapper(localName = "addRuleResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.AddRuleResponse")
    public java.lang.Integer addRule(
        @WebParam(name = "rule", targetNamespace = "http://service.rews.mainconcept.com")
        com.mainconcept.rewsservice.Rule rule
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:submitWatchJob", output = "urn:submitWatchJobResponse")
    @RequestWrapper(localName = "submitWatchJob", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.SubmitWatchJob")
    @WebMethod(action = "urn:submitWatchJob")
    @ResponseWrapper(localName = "submitWatchJobResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.SubmitWatchJobResponse")
    public com.mainconcept.rewsservice.Job submitWatchJob(
        @WebParam(name = "watchJob", targetNamespace = "http://service.rews.mainconcept.com")
        com.mainconcept.rewsservice.Job watchJob,
        @WebParam(name = "presets", targetNamespace = "http://service.rews.mainconcept.com")
        java.util.List<java.lang.String> presets,
        @WebParam(name = "priority", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Integer priority,
        @WebParam(name = "makeProxy", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Boolean makeProxy,
        @WebParam(name = "isAutoStart", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Boolean isAutoStart,
        @WebParam(name = "ruleName", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String ruleName,
        @WebParam(name = "allowConcurrent", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Boolean allowConcurrent
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:isUserValid", output = "urn:isUserValidResponse")
    @RequestWrapper(localName = "isUserValid", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.IsUserValid")
    @WebMethod(action = "urn:isUserValid")
    @ResponseWrapper(localName = "isUserValidResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.IsUserValidResponse")
    public java.lang.Boolean isUserValid(
        @WebParam(name = "reserved", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String reserved
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:Reserved", output = "urn:ReservedResponse")
    @RequestWrapper(localName = "Reserved", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.Reserved")
    @WebMethod(operationName = "Reserved", action = "urn:Reserved")
    @ResponseWrapper(localName = "ReservedResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.ReservedResponse")
    public java.lang.String reserved(
        @WebParam(name = "reserved1", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String reserved1,
        @WebParam(name = "reserved2", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String reserved2,
        @WebParam(name = "reserved3", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String reserved3
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:queueSearchExportCount", output = "urn:queueSearchExportCountResponse")
    @RequestWrapper(localName = "queueSearchExportCount", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.QueueSearchExportCount")
    @WebMethod(action = "urn:queueSearchExportCount")
    @ResponseWrapper(localName = "queueSearchExportCountResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.QueueSearchExportCountResponse")
    public java.lang.Long queueSearchExportCount(
        @WebParam(name = "queueSearchOpts", targetNamespace = "http://service.rews.mainconcept.com")
        com.mainconcept.rewsservice.QSearchOpts queueSearchOpts,
        @WebParam(name = "fetchAllFields", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Boolean fetchAllFields
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:getServiceInfoRaw", output = "urn:getServiceInfoRawResponse")
    @RequestWrapper(localName = "getServiceInfoRaw", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetServiceInfoRaw")
    @WebMethod(action = "urn:getServiceInfoRaw")
    @ResponseWrapper(localName = "getServiceInfoRawResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetServiceInfoRawResponse")
    public java.lang.String getServiceInfoRaw(
        @WebParam(name = "reserved", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String reserved
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:emailerSendMessageEmailAddressVerificationCode", output = "urn:emailerSendMessageEmailAddressVerificationCodeResponse")
    @RequestWrapper(localName = "emailerSendMessageEmailAddressVerificationCode", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.EmailerSendMessageEmailAddressVerificationCode")
    @WebMethod(action = "urn:emailerSendMessageEmailAddressVerificationCode")
    @ResponseWrapper(localName = "emailerSendMessageEmailAddressVerificationCodeResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.EmailerSendMessageEmailAddressVerificationCodeResponse")
    public java.lang.Boolean emailerSendMessageEmailAddressVerificationCode(
        @WebParam(name = "username", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String username
    );

    @Oneway
    @Action(input = "urn:setSessionLastError")
    @RequestWrapper(localName = "setSessionLastError", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.SetSessionLastError")
    @WebMethod(action = "urn:setSessionLastError")
    public void setSessionLastError(
        @WebParam(name = "errorMessage", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String errorMessage,
        @WebParam(name = "writeToLog", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Boolean writeToLog
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:deleteCategory", output = "urn:deleteCategoryResponse")
    @RequestWrapper(localName = "deleteCategory", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.DeleteCategory")
    @WebMethod(action = "urn:deleteCategory")
    @ResponseWrapper(localName = "deleteCategoryResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.DeleteCategoryResponse")
    public java.lang.Boolean deleteCategory(
        @WebParam(name = "name", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String name
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:getPresetGroupUserGroups", output = "urn:getPresetGroupUserGroupsResponse")
    @RequestWrapper(localName = "getPresetGroupUserGroups", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetPresetGroupUserGroups")
    @WebMethod(action = "urn:getPresetGroupUserGroups")
    @ResponseWrapper(localName = "getPresetGroupUserGroupsResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetPresetGroupUserGroupsResponse")
    public java.util.List<com.mainconcept.rewsservice.UserGroup> getPresetGroupUserGroups(
        @WebParam(name = "presetGroupName", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String presetGroupName
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:setUserGroupMembers", output = "urn:setUserGroupMembersResponse")
    @RequestWrapper(localName = "setUserGroupMembers", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.SetUserGroupMembers")
    @WebMethod(action = "urn:setUserGroupMembers")
    @ResponseWrapper(localName = "setUserGroupMembersResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.SetUserGroupMembersResponse")
    public java.lang.Boolean setUserGroupMembers(
        @WebParam(name = "groupName", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String groupName,
        @WebParam(name = "usernames", targetNamespace = "http://service.rews.mainconcept.com")
        java.util.List<java.lang.String> usernames
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:logoutUser", output = "urn:logoutUserResponse")
    @RequestWrapper(localName = "logoutUser", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.LogoutUser")
    @WebMethod(action = "urn:logoutUser")
    @ResponseWrapper(localName = "logoutUserResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.LogoutUserResponse")
    public java.lang.Boolean logoutUser(
        @WebParam(name = "reserved", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String reserved
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:emailerSendMessage", output = "urn:emailerSendMessageResponse")
    @RequestWrapper(localName = "emailerSendMessage", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.EmailerSendMessage")
    @WebMethod(action = "urn:emailerSendMessage")
    @ResponseWrapper(localName = "emailerSendMessageResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.EmailerSendMessageResponse")
    public java.lang.Boolean emailerSendMessage(
        @WebParam(name = "message", targetNamespace = "http://service.rews.mainconcept.com")
        com.mainconcept.rewsservice.EmailMessage message
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:getKdfInfo", output = "urn:getKdfInfoResponse")
    @RequestWrapper(localName = "getKdfInfo", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetKdfInfo")
    @WebMethod(action = "urn:getKdfInfo")
    @ResponseWrapper(localName = "getKdfInfoResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetKdfInfoResponse")
    public com.mainconcept.rewsservice.KdfInfo getKdfInfo(
        @WebParam(name = "locationName", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String locationName,
        @WebParam(name = "path", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String path,
        @WebParam(name = "filename", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String filename
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:listUsers", output = "urn:listUsersResponse")
    @RequestWrapper(localName = "listUsers", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.ListUsers")
    @WebMethod(action = "urn:listUsers")
    @ResponseWrapper(localName = "listUsersResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.ListUsersResponse")
    public java.util.List<com.mainconcept.rewsservice.User> listUsers(
        @WebParam(name = "reserved", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String reserved
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:getServerGroupID", output = "urn:getServerGroupIDResponse")
    @RequestWrapper(localName = "getServerGroupID", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetServerGroupID")
    @WebMethod(action = "urn:getServerGroupID")
    @ResponseWrapper(localName = "getServerGroupIDResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetServerGroupIDResponse")
    public java.lang.Integer getServerGroupID(
        @WebParam(name = "groupName", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String groupName
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:addServerGroup", output = "urn:addServerGroupResponse")
    @RequestWrapper(localName = "addServerGroup", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.AddServerGroup")
    @WebMethod(action = "urn:addServerGroup")
    @ResponseWrapper(localName = "addServerGroupResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.AddServerGroupResponse")
    public java.lang.Integer addServerGroup(
        @WebParam(name = "newGroup", targetNamespace = "http://service.rews.mainconcept.com")
        com.mainconcept.rewsservice.ServerGroup newGroup
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:getUserGroupAuths", output = "urn:getUserGroupAuthsResponse")
    @RequestWrapper(localName = "getUserGroupAuths", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetUserGroupAuths")
    @WebMethod(action = "urn:getUserGroupAuths")
    @ResponseWrapper(localName = "getUserGroupAuthsResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetUserGroupAuthsResponse")
    public java.util.List<java.lang.String> getUserGroupAuths(
        @WebParam(name = "userGroupName", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String userGroupName
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:stopWatchJob", output = "urn:stopWatchJobResponse")
    @RequestWrapper(localName = "stopWatchJob", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.StopWatchJob")
    @WebMethod(action = "urn:stopWatchJob")
    @ResponseWrapper(localName = "stopWatchJobResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.StopWatchJobResponse")
    public java.lang.Boolean stopWatchJob(
        @WebParam(name = "watchJobID", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Integer watchJobID,
        @WebParam(name = "allowResume", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Boolean allowResume
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:pingREWS", output = "urn:pingREWSResponse")
    @RequestWrapper(localName = "pingREWS", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.PingREWS")
    @WebMethod(action = "urn:pingREWS")
    @ResponseWrapper(localName = "pingREWSResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.PingREWSResponse")
    public java.lang.String pingREWS(
        @WebParam(name = "reserved", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String reserved,
        @WebParam(name = "from", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String from
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:reloadLicenses", output = "urn:reloadLicensesResponse")
    @RequestWrapper(localName = "reloadLicenses", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.ReloadLicenses")
    @WebMethod(action = "urn:reloadLicenses")
    @ResponseWrapper(localName = "reloadLicensesResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.ReloadLicensesResponse")
    public java.lang.Boolean reloadLicenses(
        @WebParam(name = "reserved", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String reserved
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:listServers", output = "urn:listServersResponse")
    @RequestWrapper(localName = "listServers", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.ListServers")
    @WebMethod(action = "urn:listServers")
    @ResponseWrapper(localName = "listServersResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.ListServersResponse")
    public java.util.List<com.mainconcept.rewsservice.Server> listServers(
        @WebParam(name = "reserved", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String reserved
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:setJobStates", output = "urn:setJobStatesResponse")
    @RequestWrapper(localName = "setJobStates", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.SetJobStates")
    @WebMethod(action = "urn:setJobStates")
    @ResponseWrapper(localName = "setJobStatesResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.SetJobStatesResponse")
    public java.lang.Boolean setJobStates(
        @WebParam(name = "jobID", targetNamespace = "http://service.rews.mainconcept.com")
        java.util.List<java.lang.Integer> jobID,
        @WebParam(name = "state", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String state
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:getMediaInfo", output = "urn:getMediaInfoResponse")
    @RequestWrapper(localName = "getMediaInfo", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetMediaInfo")
    @WebMethod(action = "urn:getMediaInfo")
    @ResponseWrapper(localName = "getMediaInfoResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetMediaInfoResponse")
    public java.util.List<com.mainconcept.rewsservice.MediaInfo> getMediaInfo(
        @WebParam(name = "jobID", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Integer jobID
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:queueSearchExport", output = "urn:queueSearchExportResponse")
    @RequestWrapper(localName = "queueSearchExport", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.QueueSearchExport")
    @WebMethod(action = "urn:queueSearchExport")
    @ResponseWrapper(localName = "queueSearchExportResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.QueueSearchExportResponse")
    public java.util.List<com.mainconcept.rewsservice.ArrayOfString> queueSearchExport(
        @WebParam(name = "queueSearchOpts", targetNamespace = "http://service.rews.mainconcept.com")
        com.mainconcept.rewsservice.QSearchOpts queueSearchOpts,
        @WebParam(name = "fetchAllFields", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Boolean fetchAllFields
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:updateLocation", output = "urn:updateLocationResponse")
    @RequestWrapper(localName = "updateLocation", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.UpdateLocation")
    @WebMethod(action = "urn:updateLocation")
    @ResponseWrapper(localName = "updateLocationResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.UpdateLocationResponse")
    public java.lang.Boolean updateLocation(
        @WebParam(name = "location", targetNamespace = "http://service.rews.mainconcept.com")
        com.mainconcept.rewsservice.Location location
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:emailerSendMessageNewPassword", output = "urn:emailerSendMessageNewPasswordResponse")
    @RequestWrapper(localName = "emailerSendMessageNewPassword", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.EmailerSendMessageNewPassword")
    @WebMethod(action = "urn:emailerSendMessageNewPassword")
    @ResponseWrapper(localName = "emailerSendMessageNewPasswordResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.EmailerSendMessageNewPasswordResponse")
    public java.lang.Boolean emailerSendMessageNewPassword(
        @WebParam(name = "username", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String username
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:queueSearchExportOffset", output = "urn:queueSearchExportOffsetResponse")
    @RequestWrapper(localName = "queueSearchExportOffset", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.QueueSearchExportOffset")
    @WebMethod(action = "urn:queueSearchExportOffset")
    @ResponseWrapper(localName = "queueSearchExportOffsetResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.QueueSearchExportOffsetResponse")
    public java.util.List<com.mainconcept.rewsservice.ArrayOfString> queueSearchExportOffset(
        @WebParam(name = "queueSearchOpts", targetNamespace = "http://service.rews.mainconcept.com")
        com.mainconcept.rewsservice.QSearchOpts queueSearchOpts,
        @WebParam(name = "fetchAllFields", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Boolean fetchAllFields,
        @WebParam(name = "startNo", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Long startNo,
        @WebParam(name = "quantity", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Long quantity
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:deleteLocation", output = "urn:deleteLocationResponse")
    @RequestWrapper(localName = "deleteLocation", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.DeleteLocation")
    @WebMethod(action = "urn:deleteLocation")
    @ResponseWrapper(localName = "deleteLocationResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.DeleteLocationResponse")
    public java.lang.Boolean deleteLocation(
        @WebParam(name = "locName", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String locName
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:deletePresetGroup", output = "urn:deletePresetGroupResponse")
    @RequestWrapper(localName = "deletePresetGroup", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.DeletePresetGroup")
    @WebMethod(action = "urn:deletePresetGroup")
    @ResponseWrapper(localName = "deletePresetGroupResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.DeletePresetGroupResponse")
    public java.lang.Boolean deletePresetGroup(
        @WebParam(name = "groupName", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String groupName
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:deleteWatchJob", output = "urn:deleteWatchJobResponse")
    @RequestWrapper(localName = "deleteWatchJob", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.DeleteWatchJob")
    @WebMethod(action = "urn:deleteWatchJob")
    @ResponseWrapper(localName = "deleteWatchJobResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.DeleteWatchJobResponse")
    public java.lang.Boolean deleteWatchJob(
        @WebParam(name = "watchJobID", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Integer watchJobID,
        @WebParam(name = "isEdited", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Boolean isEdited
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:updateUserGroup", output = "urn:updateUserGroupResponse")
    @RequestWrapper(localName = "updateUserGroup", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.UpdateUserGroup")
    @WebMethod(action = "urn:updateUserGroup")
    @ResponseWrapper(localName = "updateUserGroupResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.UpdateUserGroupResponse")
    public java.lang.Boolean updateUserGroup(
        @WebParam(name = "userGroup", targetNamespace = "http://service.rews.mainconcept.com")
        com.mainconcept.rewsservice.UserGroup userGroup
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:deleteRule", output = "urn:deleteRuleResponse")
    @RequestWrapper(localName = "deleteRule", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.DeleteRule")
    @WebMethod(action = "urn:deleteRule")
    @ResponseWrapper(localName = "deleteRuleResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.DeleteRuleResponse")
    public java.lang.Boolean deleteRule(
        @WebParam(name = "ruleID", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Integer ruleID,
        @WebParam(name = "wfID", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Integer wfID
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:setTaskState", output = "urn:setTaskStateResponse")
    @RequestWrapper(localName = "setTaskState", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.SetTaskState")
    @WebMethod(action = "urn:setTaskState")
    @ResponseWrapper(localName = "setTaskStateResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.SetTaskStateResponse")
    public com.mainconcept.rewsservice.Task setTaskState(
        @WebParam(name = "taskID", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Integer taskID,
        @WebParam(name = "state", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String state
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:setUserGroupAuths", output = "urn:setUserGroupAuthsResponse")
    @RequestWrapper(localName = "setUserGroupAuths", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.SetUserGroupAuths")
    @WebMethod(action = "urn:setUserGroupAuths")
    @ResponseWrapper(localName = "setUserGroupAuthsResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.SetUserGroupAuthsResponse")
    public java.lang.Boolean setUserGroupAuths(
        @WebParam(name = "userGroupName", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String userGroupName,
        @WebParam(name = "auths", targetNamespace = "http://service.rews.mainconcept.com")
        java.util.List<java.lang.String> auths
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:getBypassofJob", output = "urn:getBypassofJobResponse")
    @RequestWrapper(localName = "getBypassofJob", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetBypassofJob")
    @WebMethod(action = "urn:getBypassofJob")
    @ResponseWrapper(localName = "getBypassofJobResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetBypassofJobResponse")
    public com.mainconcept.rewsservice.BypassParameter getBypassofJob(
        @WebParam(name = "jobID", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Integer jobID
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:listFiles", output = "urn:listFilesResponse")
    @RequestWrapper(localName = "listFiles", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.ListFiles")
    @WebMethod(action = "urn:listFiles")
    @ResponseWrapper(localName = "listFilesResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.ListFilesResponse")
    public java.util.List<com.mainconcept.rewsservice.DirList> listFiles(
        @WebParam(name = "locationName", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String locationName,
        @WebParam(name = "path", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String path,
        @WebParam(name = "fileName", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String fileName,
        @WebParam(name = "extensionsToList", targetNamespace = "http://service.rews.mainconcept.com")
        java.util.List<java.lang.String> extensionsToList,
        @WebParam(name = "skipXML", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Boolean skipXML,
        @WebParam(name = "extensionsToSkip", targetNamespace = "http://service.rews.mainconcept.com")
        java.util.List<java.lang.String> extensionsToSkip
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:getAudioChannelsOfPG", output = "urn:getAudioChannelsOfPGResponse")
    @RequestWrapper(localName = "getAudioChannelsOfPG", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetAudioChannelsOfPG")
    @WebMethod(action = "urn:getAudioChannelsOfPG")
    @ResponseWrapper(localName = "getAudioChannelsOfPGResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetAudioChannelsOfPGResponse")
    public java.util.List<com.mainconcept.rewsservice.PresetElement> getAudioChannelsOfPG(
        @WebParam(name = "serverName", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String serverName,
        @WebParam(name = "pgName", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String pgName
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:getTaskState", output = "urn:getTaskStateResponse")
    @RequestWrapper(localName = "getTaskState", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetTaskState")
    @WebMethod(action = "urn:getTaskState")
    @ResponseWrapper(localName = "getTaskStateResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetTaskStateResponse")
    public com.mainconcept.rewsservice.TaskState getTaskState(
        @WebParam(name = "taskID", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Integer taskID
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:setLocationAuthentication", output = "urn:setLocationAuthenticationResponse")
    @RequestWrapper(localName = "setLocationAuthentication", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.SetLocationAuthentication")
    @WebMethod(action = "urn:setLocationAuthentication")
    @ResponseWrapper(localName = "setLocationAuthenticationResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.SetLocationAuthenticationResponse")
    public java.lang.Boolean setLocationAuthentication(
        @WebParam(name = "locName", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String locName,
        @WebParam(name = "locationAuth", targetNamespace = "http://service.rews.mainconcept.com")
        com.mainconcept.rewsservice.LocAuth locationAuth,
        @WebParam(name = "usernames", targetNamespace = "http://service.rews.mainconcept.com")
        java.util.List<java.lang.String> usernames
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:getTaskQC", output = "urn:getTaskQCResponse")
    @RequestWrapper(localName = "getTaskQC", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetTaskQC")
    @WebMethod(action = "urn:getTaskQC")
    @ResponseWrapper(localName = "getTaskQCResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetTaskQCResponse")
    public java.util.List<byte[]> getTaskQC(
        @WebParam(name = "taskID", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Integer taskID
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:getSessionLastError", output = "urn:getSessionLastErrorResponse")
    @RequestWrapper(localName = "getSessionLastError", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetSessionLastError")
    @WebMethod(action = "urn:getSessionLastError")
    @ResponseWrapper(localName = "getSessionLastErrorResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetSessionLastErrorResponse")
    public java.lang.String getSessionLastError(
        @WebParam(name = "reserved", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String reserved
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:deleteUserGroup", output = "urn:deleteUserGroupResponse")
    @RequestWrapper(localName = "deleteUserGroup", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.DeleteUserGroup")
    @WebMethod(action = "urn:deleteUserGroup")
    @ResponseWrapper(localName = "deleteUserGroupResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.DeleteUserGroupResponse")
    public java.lang.Boolean deleteUserGroup(
        @WebParam(name = "groupName", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String groupName
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:deleteServerGroup", output = "urn:deleteServerGroupResponse")
    @RequestWrapper(localName = "deleteServerGroup", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.DeleteServerGroup")
    @WebMethod(action = "urn:deleteServerGroup")
    @ResponseWrapper(localName = "deleteServerGroupResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.DeleteServerGroupResponse")
    public java.lang.Boolean deleteServerGroup(
        @WebParam(name = "groupName", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String groupName
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:updateServerGroup", output = "urn:updateServerGroupResponse")
    @RequestWrapper(localName = "updateServerGroup", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.UpdateServerGroup")
    @WebMethod(action = "urn:updateServerGroup")
    @ResponseWrapper(localName = "updateServerGroupResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.UpdateServerGroupResponse")
    public java.lang.Boolean updateServerGroup(
        @WebParam(name = "serverGroup", targetNamespace = "http://service.rews.mainconcept.com")
        com.mainconcept.rewsservice.ServerGroup serverGroup
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:addCategory", output = "urn:addCategoryResponse")
    @RequestWrapper(localName = "addCategory", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.AddCategory")
    @WebMethod(action = "urn:addCategory")
    @ResponseWrapper(localName = "addCategoryResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.AddCategoryResponse")
    public java.lang.Boolean addCategory(
        @WebParam(name = "category", targetNamespace = "http://service.rews.mainconcept.com")
        com.mainconcept.rewsservice.Category category
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:submitJob", output = "urn:submitJobResponse")
    @RequestWrapper(localName = "submitJob", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.SubmitJob")
    @WebMethod(action = "urn:submitJob")
    @ResponseWrapper(localName = "submitJobResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.SubmitJobResponse")
    public com.mainconcept.rewsservice.Job submitJob(
        @WebParam(name = "job", targetNamespace = "http://service.rews.mainconcept.com")
        com.mainconcept.rewsservice.Job job,
        @WebParam(name = "presets", targetNamespace = "http://service.rews.mainconcept.com")
        java.util.List<java.lang.String> presets,
        @WebParam(name = "inStreams", targetNamespace = "http://service.rews.mainconcept.com")
        java.util.List<com.mainconcept.rewsservice.InputStream> inStreams,
        @WebParam(name = "priority", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Integer priority,
        @WebParam(name = "makeProxy", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Boolean makeProxy,
        @WebParam(name = "tmpPG", targetNamespace = "http://service.rews.mainconcept.com")
        com.mainconcept.rewsservice.PresetGroup tmpPG,
        @WebParam(name = "UVSettings", targetNamespace = "http://service.rews.mainconcept.com")
        java.util.List<com.mainconcept.rewsservice.UVSettings> uvSettings
    );

    @Oneway
    @Action(input = "urn:UpdateJobsOwnerID")
    @RequestWrapper(localName = "UpdateJobsOwnerID", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.UpdateJobsOwnerID")
    @WebMethod(operationName = "UpdateJobsOwnerID", action = "urn:UpdateJobsOwnerID")
    public void updateJobsOwnerID(
        @WebParam(name = "olderOwnerID", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Integer olderOwnerID,
        @WebParam(name = "newOwnerID", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Integer newOwnerID
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:removeJobs", output = "urn:removeJobsResponse")
    @RequestWrapper(localName = "removeJobs", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.RemoveJobs")
    @WebMethod(action = "urn:removeJobs")
    @ResponseWrapper(localName = "removeJobsResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.RemoveJobsResponse")
    public java.lang.Boolean removeJobs(
        @WebParam(name = "jobID", targetNamespace = "http://service.rews.mainconcept.com")
        java.util.List<java.lang.Integer> jobID
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:removeJob", output = "urn:removeJobResponse")
    @RequestWrapper(localName = "removeJob", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.RemoveJob")
    @WebMethod(action = "urn:removeJob")
    @ResponseWrapper(localName = "removeJobResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.RemoveJobResponse")
    public java.lang.Boolean removeJob(
        @WebParam(name = "jobID", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Integer jobID
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:getServiceInfo", output = "urn:getServiceInfoResponse")
    @RequestWrapper(localName = "getServiceInfo", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetServiceInfo")
    @WebMethod(action = "urn:getServiceInfo")
    @ResponseWrapper(localName = "getServiceInfoResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetServiceInfoResponse")
    public com.mainconcept.rewsservice.RewsInfo getServiceInfo(
        @WebParam(name = "reserved", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String reserved
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:alertsListAlertMessages", output = "urn:alertsListAlertMessagesResponse")
    @RequestWrapper(localName = "alertsListAlertMessages", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.AlertsListAlertMessages")
    @WebMethod(action = "urn:alertsListAlertMessages")
    @ResponseWrapper(localName = "alertsListAlertMessagesResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.AlertsListAlertMessagesResponse")
    public java.util.List<com.mainconcept.rewsservice.AlertMessage> alertsListAlertMessages(
        @WebParam(name = "reserved", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String reserved
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:setServerGroupUserGroups", output = "urn:setServerGroupUserGroupsResponse")
    @RequestWrapper(localName = "setServerGroupUserGroups", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.SetServerGroupUserGroups")
    @WebMethod(action = "urn:setServerGroupUserGroups")
    @ResponseWrapper(localName = "setServerGroupUserGroupsResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.SetServerGroupUserGroupsResponse")
    public java.lang.Boolean setServerGroupUserGroups(
        @WebParam(name = "serverGroupName", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String serverGroupName,
        @WebParam(name = "userGroupNames", targetNamespace = "http://service.rews.mainconcept.com")
        java.util.List<java.lang.String> userGroupNames
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:listRules", output = "urn:listRulesResponse")
    @RequestWrapper(localName = "listRules", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.ListRules")
    @WebMethod(action = "urn:listRules")
    @ResponseWrapper(localName = "listRulesResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.ListRulesResponse")
    public java.util.List<com.mainconcept.rewsservice.Rule> listRules(
        @WebParam(name = "reserved", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String reserved
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:updateCategory", output = "urn:updateCategoryResponse")
    @RequestWrapper(localName = "updateCategory", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.UpdateCategory")
    @WebMethod(action = "urn:updateCategory")
    @ResponseWrapper(localName = "updateCategoryResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.UpdateCategoryResponse")
    public java.lang.Boolean updateCategory(
        @WebParam(name = "category", targetNamespace = "http://service.rews.mainconcept.com")
        com.mainconcept.rewsservice.Category category
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:setTaskQPosition", output = "urn:setTaskQPositionResponse")
    @RequestWrapper(localName = "setTaskQPosition", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.SetTaskQPosition")
    @WebMethod(action = "urn:setTaskQPosition")
    @ResponseWrapper(localName = "setTaskQPositionResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.SetTaskQPositionResponse")
    public java.lang.Boolean setTaskQPosition(
        @WebParam(name = "taskID", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Integer taskID,
        @WebParam(name = "command", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String command
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:getServerGroupMembers", output = "urn:getServerGroupMembersResponse")
    @RequestWrapper(localName = "getServerGroupMembers", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetServerGroupMembers")
    @WebMethod(action = "urn:getServerGroupMembers")
    @ResponseWrapper(localName = "getServerGroupMembersResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetServerGroupMembersResponse")
    public java.util.List<com.mainconcept.rewsservice.Server> getServerGroupMembers(
        @WebParam(name = "groupName", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String groupName
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:shutdownServer", output = "urn:shutdownServerResponse")
    @RequestWrapper(localName = "shutdownServer", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.ShutdownServer")
    @WebMethod(action = "urn:shutdownServer")
    @ResponseWrapper(localName = "shutdownServerResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.ShutdownServerResponse")
    public java.lang.Boolean shutdownServer(
        @WebParam(name = "serverName", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String serverName,
        @WebParam(name = "password", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String password,
        @WebParam(name = "abort", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Boolean abort
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:listStats", output = "urn:listStatsResponse")
    @RequestWrapper(localName = "listStats", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.ListStats")
    @WebMethod(action = "urn:listStats")
    @ResponseWrapper(localName = "listStatsResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.ListStatsResponse")
    public com.mainconcept.rewsservice.Stats listStats(
        @WebParam(name = "wfJobID", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Integer wfJobID,
        @WebParam(name = "sgName", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String sgName,
        @WebParam(name = "pgName", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String pgName,
        @WebParam(name = "serverName", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String serverName
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:registerServer", output = "urn:registerServerResponse")
    @RequestWrapper(localName = "registerServer", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.RegisterServer")
    @WebMethod(action = "urn:registerServer")
    @ResponseWrapper(localName = "registerServerResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.RegisterServerResponse")
    public java.lang.String registerServer(
        @WebParam(name = "newServer", targetNamespace = "http://service.rews.mainconcept.com")
        com.mainconcept.rewsservice.Server newServer,
        @WebParam(name = "TWSClientID", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String twsClientID,
        @WebParam(name = "reserved", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String reserved
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:deleteServer", output = "urn:deleteServerResponse")
    @RequestWrapper(localName = "deleteServer", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.DeleteServer")
    @WebMethod(action = "urn:deleteServer")
    @ResponseWrapper(localName = "deleteServerResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.DeleteServerResponse")
    public java.lang.Boolean deleteServer(
        @WebParam(name = "serverName", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String serverName,
        @WebParam(name = "password", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String password,
        @WebParam(name = "abort", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Boolean abort
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:getJobState", output = "urn:getJobStateResponse")
    @RequestWrapper(localName = "getJobState", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetJobState")
    @WebMethod(action = "urn:getJobState")
    @ResponseWrapper(localName = "getJobStateResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetJobStateResponse")
    public java.lang.String getJobState(
        @WebParam(name = "jobID", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Integer jobID
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:listPresetGroup", output = "urn:listPresetGroupResponse")
    @RequestWrapper(localName = "listPresetGroup", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.ListPresetGroup")
    @WebMethod(action = "urn:listPresetGroup")
    @ResponseWrapper(localName = "listPresetGroupResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.ListPresetGroupResponse")
    public com.mainconcept.rewsservice.PresetGroup listPresetGroup(
        @WebParam(name = "groupName", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String groupName
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:startWatchJob", output = "urn:startWatchJobResponse")
    @RequestWrapper(localName = "startWatchJob", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.StartWatchJob")
    @WebMethod(action = "urn:startWatchJob")
    @ResponseWrapper(localName = "startWatchJobResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.StartWatchJobResponse")
    public java.lang.Boolean startWatchJob(
        @WebParam(name = "watchJobID", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Integer watchJobID
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:resubmitJob", output = "urn:resubmitJobResponse")
    @RequestWrapper(localName = "resubmitJob", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.ResubmitJob")
    @WebMethod(action = "urn:resubmitJob")
    @ResponseWrapper(localName = "resubmitJobResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.ResubmitJobResponse")
    public java.lang.Integer resubmitJob(
        @WebParam(name = "jobID", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Integer jobID
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:listLicenses", output = "urn:listLicensesResponse")
    @RequestWrapper(localName = "listLicenses", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.ListLicenses")
    @WebMethod(action = "urn:listLicenses")
    @ResponseWrapper(localName = "listLicensesResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.ListLicensesResponse")
    public java.util.List<com.mainconcept.rewsservice.License> listLicenses(
        @WebParam(name = "reserved", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String reserved
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:getSnapshotLive", output = "urn:getSnapshotLiveResponse")
    @RequestWrapper(localName = "getSnapshotLive", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetSnapshotLive")
    @WebMethod(action = "urn:getSnapshotLive")
    @ResponseWrapper(localName = "getSnapshotLiveResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetSnapshotLiveResponse")
    public com.mainconcept.rewsservice.Snapshot getSnapshotLive(
        @WebParam(name = "username", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String username,
        @WebParam(name = "serverGroup", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String serverGroup,
        @WebParam(name = "interval", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String interval
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:queueSearch", output = "urn:queueSearchResponse")
    @RequestWrapper(localName = "queueSearch", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.QueueSearch")
    @WebMethod(action = "urn:queueSearch")
    @ResponseWrapper(localName = "queueSearchResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.QueueSearchResponse")
    public com.mainconcept.rewsservice.QSearchResult queueSearch(
        @WebParam(name = "queueSearchOpts", targetNamespace = "http://service.rews.mainconcept.com")
        com.mainconcept.rewsservice.QSearchOpts queueSearchOpts,
        @WebParam(name = "fetchAllFields", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Boolean fetchAllFields
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:getCategoryPresetGroups", output = "urn:getCategoryPresetGroupsResponse")
    @RequestWrapper(localName = "getCategoryPresetGroups", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetCategoryPresetGroups")
    @WebMethod(action = "urn:getCategoryPresetGroups")
    @ResponseWrapper(localName = "getCategoryPresetGroupsResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetCategoryPresetGroupsResponse")
    public java.util.List<com.mainconcept.rewsservice.PresetGroup> getCategoryPresetGroups(
        @WebParam(name = "categoryName", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String categoryName
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:removeTask", output = "urn:removeTaskResponse")
    @RequestWrapper(localName = "removeTask", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.RemoveTask")
    @WebMethod(action = "urn:removeTask")
    @ResponseWrapper(localName = "removeTaskResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.RemoveTaskResponse")
    public java.lang.Boolean removeTask(
        @WebParam(name = "taskID", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Integer taskID
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:setTaskPriority", output = "urn:setTaskPriorityResponse")
    @RequestWrapper(localName = "setTaskPriority", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.SetTaskPriority")
    @WebMethod(action = "urn:setTaskPriority")
    @ResponseWrapper(localName = "setTaskPriorityResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.SetTaskPriorityResponse")
    public java.lang.Boolean setTaskPriority(
        @WebParam(name = "taskID", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Integer taskID,
        @WebParam(name = "priority", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Integer priority
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:setCategoryPresetGroups", output = "urn:setCategoryPresetGroupsResponse")
    @RequestWrapper(localName = "setCategoryPresetGroups", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.SetCategoryPresetGroups")
    @WebMethod(action = "urn:setCategoryPresetGroups")
    @ResponseWrapper(localName = "setCategoryPresetGroupsResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.SetCategoryPresetGroupsResponse")
    public java.lang.Boolean setCategoryPresetGroups(
        @WebParam(name = "categoryName", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String categoryName,
        @WebParam(name = "presetGroupNames", targetNamespace = "http://service.rews.mainconcept.com")
        java.util.List<java.lang.String> presetGroupNames
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:updatePresetGroup", output = "urn:updatePresetGroupResponse")
    @RequestWrapper(localName = "updatePresetGroup", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.UpdatePresetGroup")
    @WebMethod(action = "urn:updatePresetGroup")
    @ResponseWrapper(localName = "updatePresetGroupResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.UpdatePresetGroupResponse")
    public java.lang.Boolean updatePresetGroup(
        @WebParam(name = "presetGroup", targetNamespace = "http://service.rews.mainconcept.com")
        com.mainconcept.rewsservice.PresetGroup presetGroup
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:listWatchJobs", output = "urn:listWatchJobsResponse")
    @RequestWrapper(localName = "listWatchJobs", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.ListWatchJobs")
    @WebMethod(action = "urn:listWatchJobs")
    @ResponseWrapper(localName = "listWatchJobsResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.ListWatchJobsResponse")
    public com.mainconcept.rewsservice.QSearchResult listWatchJobs(
        @WebParam(name = "watchSearchOpts", targetNamespace = "http://service.rews.mainconcept.com")
        com.mainconcept.rewsservice.WatchSearchOpts watchSearchOpts
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:addLocation", output = "urn:addLocationResponse")
    @RequestWrapper(localName = "addLocation", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.AddLocation")
    @WebMethod(action = "urn:addLocation")
    @ResponseWrapper(localName = "addLocationResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.AddLocationResponse")
    public java.lang.Integer addLocation(
        @WebParam(name = "location", targetNamespace = "http://service.rews.mainconcept.com")
        com.mainconcept.rewsservice.Location location
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:getDefaultMapping", output = "urn:getDefaultMappingResponse")
    @RequestWrapper(localName = "getDefaultMapping", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetDefaultMapping")
    @WebMethod(action = "urn:getDefaultMapping")
    @ResponseWrapper(localName = "getDefaultMappingResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetDefaultMappingResponse")
    public java.lang.String getDefaultMapping(
        @WebParam(name = "serverName", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String serverName,
        @WebParam(name = "pgName", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String pgName,
        @WebParam(name = "preset", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String preset,
        @WebParam(name = "inputAudio", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String inputAudio,
        @WebParam(name = "outchcount", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Integer outchcount
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:alertsIsSystemOK", output = "urn:alertsIsSystemOKResponse")
    @RequestWrapper(localName = "alertsIsSystemOK", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.AlertsIsSystemOK")
    @WebMethod(action = "urn:alertsIsSystemOK")
    @ResponseWrapper(localName = "alertsIsSystemOKResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.AlertsIsSystemOKResponse")
    public java.lang.Boolean alertsIsSystemOK(
        @WebParam(name = "reserved", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String reserved
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:updateRule", output = "urn:updateRuleResponse")
    @RequestWrapper(localName = "updateRule", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.UpdateRule")
    @WebMethod(action = "urn:updateRule")
    @ResponseWrapper(localName = "updateRuleResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.UpdateRuleResponse")
    public java.lang.Boolean updateRule(
        @WebParam(name = "rule", targetNamespace = "http://service.rews.mainconcept.com")
        com.mainconcept.rewsservice.Rule rule
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:deleteUser", output = "urn:deleteUserResponse")
    @RequestWrapper(localName = "deleteUser", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.DeleteUser")
    @WebMethod(action = "urn:deleteUser")
    @ResponseWrapper(localName = "deleteUserResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.DeleteUserResponse")
    public java.lang.Boolean deleteUser(
        @WebParam(name = "username", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String username
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:setJobState", output = "urn:setJobStateResponse")
    @RequestWrapper(localName = "setJobState", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.SetJobState")
    @WebMethod(action = "urn:setJobState")
    @ResponseWrapper(localName = "setJobStateResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.SetJobStateResponse")
    public java.lang.Boolean setJobState(
        @WebParam(name = "jobID", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Integer jobID,
        @WebParam(name = "state", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String state
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:userVerifyEmailAddress", output = "urn:userVerifyEmailAddressResponse")
    @RequestWrapper(localName = "userVerifyEmailAddress", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.UserVerifyEmailAddress")
    @WebMethod(action = "urn:userVerifyEmailAddress")
    @ResponseWrapper(localName = "userVerifyEmailAddressResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.UserVerifyEmailAddressResponse")
    public java.lang.Boolean userVerifyEmailAddress(
        @WebParam(name = "username", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String username,
        @WebParam(name = "code", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String code
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:getUserGroupMembers", output = "urn:getUserGroupMembersResponse")
    @RequestWrapper(localName = "getUserGroupMembers", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetUserGroupMembers")
    @WebMethod(action = "urn:getUserGroupMembers")
    @ResponseWrapper(localName = "getUserGroupMembersResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetUserGroupMembersResponse")
    public java.util.List<com.mainconcept.rewsservice.User> getUserGroupMembers(
        @WebParam(name = "groupName", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String groupName,
        @WebParam(name = "fetchNumPendingJobs", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Boolean fetchNumPendingJobs,
        @WebParam(name = "fetchLogonInfo", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Boolean fetchLogonInfo
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:getServerSystemStatus", output = "urn:getServerSystemStatusResponse")
    @RequestWrapper(localName = "getServerSystemStatus", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetServerSystemStatus")
    @WebMethod(action = "urn:getServerSystemStatus")
    @ResponseWrapper(localName = "getServerSystemStatusResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetServerSystemStatusResponse")
    public com.mainconcept.rewsservice.SystemStatus getServerSystemStatus(
        @WebParam(name = "serverName", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String serverName
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:getMediaInfo4Assets", output = "urn:getMediaInfo4AssetsResponse")
    @RequestWrapper(localName = "getMediaInfo4Assets", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetMediaInfo4Assets")
    @WebMethod(action = "urn:getMediaInfo4Assets")
    @ResponseWrapper(localName = "getMediaInfo4AssetsResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetMediaInfo4AssetsResponse")
    public java.util.List<com.mainconcept.rewsservice.MediaInfo> getMediaInfo4Assets(
        @WebParam(name = "inLocName", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String inLocName,
        @WebParam(name = "filePaths", targetNamespace = "http://service.rews.mainconcept.com")
        java.util.List<java.lang.String> filePaths,
        @WebParam(name = "fileNames", targetNamespace = "http://service.rews.mainconcept.com")
        java.util.List<java.lang.String> fileNames
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:getServerGroupUserGroups", output = "urn:getServerGroupUserGroupsResponse")
    @RequestWrapper(localName = "getServerGroupUserGroups", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetServerGroupUserGroups")
    @WebMethod(action = "urn:getServerGroupUserGroups")
    @ResponseWrapper(localName = "getServerGroupUserGroupsResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetServerGroupUserGroupsResponse")
    public java.util.List<com.mainconcept.rewsservice.UserGroup> getServerGroupUserGroups(
        @WebParam(name = "serverGroupName", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String serverGroupName
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:rewsVersionShort", output = "urn:rewsVersionShortResponse")
    @RequestWrapper(localName = "rewsVersionShort", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.RewsVersionShort")
    @WebMethod(action = "urn:rewsVersionShort")
    @ResponseWrapper(localName = "rewsVersionShortResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.RewsVersionShortResponse")
    public java.lang.String rewsVersionShort();

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:listLocations", output = "urn:listLocationsResponse")
    @RequestWrapper(localName = "listLocations", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.ListLocations")
    @WebMethod(action = "urn:listLocations")
    @ResponseWrapper(localName = "listLocationsResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.ListLocationsResponse")
    public java.util.List<com.mainconcept.rewsservice.Location> listLocations(
        @WebParam(name = "locType", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String locType,
        @WebParam(name = "locName", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String locName
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:addUser", output = "urn:addUserResponse")
    @RequestWrapper(localName = "addUser", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.AddUser")
    @WebMethod(action = "urn:addUser")
    @ResponseWrapper(localName = "addUserResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.AddUserResponse")
    public java.lang.Integer addUser(
        @WebParam(name = "user", targetNamespace = "http://service.rews.mainconcept.com")
        com.mainconcept.rewsservice.User user
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:loginUser", output = "urn:loginUserResponse")
    @RequestWrapper(localName = "loginUser", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.LoginUser")
    @WebMethod(action = "urn:loginUser")
    @ResponseWrapper(localName = "loginUserResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.LoginUserResponse")
    public com.mainconcept.rewsservice.User loginUser(
        @WebParam(name = "username", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String username,
        @WebParam(name = "password", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String password,
        @WebParam(name = "reserved", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String reserved
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:rewsVersionBuild", output = "urn:rewsVersionBuildResponse")
    @RequestWrapper(localName = "rewsVersionBuild", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.RewsVersionBuild")
    @WebMethod(action = "urn:rewsVersionBuild")
    @ResponseWrapper(localName = "rewsVersionBuildResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.RewsVersionBuildResponse")
    public java.lang.String rewsVersionBuild();

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:getPresetGroup", output = "urn:getPresetGroupResponse")
    @RequestWrapper(localName = "getPresetGroup", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetPresetGroup")
    @WebMethod(action = "urn:getPresetGroup")
    @ResponseWrapper(localName = "getPresetGroupResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetPresetGroupResponse")
    public com.mainconcept.rewsservice.PresetGroup getPresetGroup(
        @WebParam(name = "groupName", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String groupName
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:resubmitTasks", output = "urn:resubmitTasksResponse")
    @RequestWrapper(localName = "resubmitTasks", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.ResubmitTasks")
    @WebMethod(action = "urn:resubmitTasks")
    @ResponseWrapper(localName = "resubmitTasksResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.ResubmitTasksResponse")
    public java.util.List<java.lang.Integer> resubmitTasks(
        @WebParam(name = "taskID", targetNamespace = "http://service.rews.mainconcept.com")
        java.util.List<java.lang.Integer> taskID
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:refreshServers", output = "urn:refreshServersResponse")
    @RequestWrapper(localName = "refreshServers", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.RefreshServers")
    @WebMethod(action = "urn:refreshServers")
    @ResponseWrapper(localName = "refreshServersResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.RefreshServersResponse")
    public java.lang.Boolean refreshServers(
        @WebParam(name = "reserved", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String reserved
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:getSystemStatus", output = "urn:getSystemStatusResponse")
    @RequestWrapper(localName = "getSystemStatus", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetSystemStatus")
    @WebMethod(action = "urn:getSystemStatus")
    @ResponseWrapper(localName = "getSystemStatusResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetSystemStatusResponse")
    public com.mainconcept.rewsservice.SystemStatus getSystemStatus(
        @WebParam(name = "reserved", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String reserved
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:getPresetGroupPresets", output = "urn:getPresetGroupPresetsResponse")
    @RequestWrapper(localName = "getPresetGroupPresets", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetPresetGroupPresets")
    @WebMethod(action = "urn:getPresetGroupPresets")
    @ResponseWrapper(localName = "getPresetGroupPresetsResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetPresetGroupPresetsResponse")
    public java.util.List<com.mainconcept.rewsservice.Preset> getPresetGroupPresets(
        @WebParam(name = "groupName", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String groupName
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:verifyLocationSG", output = "urn:verifyLocationSGResponse")
    @RequestWrapper(localName = "verifyLocationSG", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.VerifyLocationSG")
    @WebMethod(action = "urn:verifyLocationSG")
    @ResponseWrapper(localName = "verifyLocationSGResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.VerifyLocationSGResponse")
    public java.util.List<com.mainconcept.rewsservice.VerifyResult> verifyLocationSG(
        @WebParam(name = "locationName", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String locationName,
        @WebParam(name = "path", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String path,
        @WebParam(name = "path1", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String path1,
        @WebParam(name = "locType", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String locType,
        @WebParam(name = "serverGroupName", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String serverGroupName,
        @WebParam(name = "testAllNodes", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Boolean testAllNodes
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:getPresetGroupPreset", output = "urn:getPresetGroupPresetResponse")
    @RequestWrapper(localName = "getPresetGroupPreset", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetPresetGroupPreset")
    @WebMethod(action = "urn:getPresetGroupPreset")
    @ResponseWrapper(localName = "getPresetGroupPresetResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetPresetGroupPresetResponse")
    public com.mainconcept.rewsservice.Preset getPresetGroupPreset(
        @WebParam(name = "presetGroupName", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String presetGroupName,
        @WebParam(name = "presetName", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String presetName
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:changeRank", output = "urn:changeRankResponse")
    @RequestWrapper(localName = "changeRank", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.ChangeRank")
    @WebMethod(action = "urn:changeRank")
    @ResponseWrapper(localName = "changeRankResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.ChangeRankResponse")
    public java.lang.Boolean changeRank(
        @WebParam(name = "taskID", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Integer taskID,
        @WebParam(name = "newRankID", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Integer newRankID
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:changePassword", output = "urn:changePasswordResponse")
    @RequestWrapper(localName = "changePassword", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.ChangePassword")
    @WebMethod(action = "urn:changePassword")
    @ResponseWrapper(localName = "changePasswordResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.ChangePasswordResponse")
    public java.lang.Boolean changePassword(
        @WebParam(name = "oldPassword", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String oldPassword,
        @WebParam(name = "newPassword", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String newPassword
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:setServerGroupMembers", output = "urn:setServerGroupMembersResponse")
    @RequestWrapper(localName = "setServerGroupMembers", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.SetServerGroupMembers")
    @WebMethod(action = "urn:setServerGroupMembers")
    @ResponseWrapper(localName = "setServerGroupMembersResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.SetServerGroupMembersResponse")
    public java.lang.Boolean setServerGroupMembers(
        @WebParam(name = "groupName", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String groupName,
        @WebParam(name = "serverNames", targetNamespace = "http://service.rews.mainconcept.com")
        java.util.List<java.lang.String> serverNames
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:removePresetGroupFromAllCategories", output = "urn:removePresetGroupFromAllCategoriesResponse")
    @RequestWrapper(localName = "removePresetGroupFromAllCategories", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.RemovePresetGroupFromAllCategories")
    @WebMethod(action = "urn:removePresetGroupFromAllCategories")
    @ResponseWrapper(localName = "removePresetGroupFromAllCategoriesResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.RemovePresetGroupFromAllCategoriesResponse")
    public java.lang.Boolean removePresetGroupFromAllCategories(
        @WebParam(name = "presetGroupId", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Integer presetGroupId
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:removeTasks", output = "urn:removeTasksResponse")
    @RequestWrapper(localName = "removeTasks", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.RemoveTasks")
    @WebMethod(action = "urn:removeTasks")
    @ResponseWrapper(localName = "removeTasksResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.RemoveTasksResponse")
    public java.lang.Boolean removeTasks(
        @WebParam(name = "taskID", targetNamespace = "http://service.rews.mainconcept.com")
        java.util.List<java.lang.Integer> taskID
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:setTaskStates", output = "urn:setTaskStatesResponse")
    @RequestWrapper(localName = "setTaskStates", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.SetTaskStates")
    @WebMethod(action = "urn:setTaskStates")
    @ResponseWrapper(localName = "setTaskStatesResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.SetTaskStatesResponse")
    public java.lang.Boolean setTaskStates(
        @WebParam(name = "taskID", targetNamespace = "http://service.rews.mainconcept.com")
        java.util.List<java.lang.Integer> taskID,
        @WebParam(name = "state", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String state
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:getPresetGroupById", output = "urn:getPresetGroupByIdResponse")
    @RequestWrapper(localName = "getPresetGroupById", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetPresetGroupById")
    @WebMethod(action = "urn:getPresetGroupById")
    @ResponseWrapper(localName = "getPresetGroupByIdResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetPresetGroupByIdResponse")
    public com.mainconcept.rewsservice.PresetGroup getPresetGroupById(
        @WebParam(name = "groupId", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Integer groupId
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:getServerLicenses", output = "urn:getServerLicensesResponse")
    @RequestWrapper(localName = "getServerLicenses", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetServerLicenses")
    @WebMethod(action = "urn:getServerLicenses")
    @ResponseWrapper(localName = "getServerLicensesResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetServerLicensesResponse")
    public java.util.List<java.lang.Long> getServerLicenses(
        @WebParam(name = "serverName", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String serverName
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:addUserGroup", output = "urn:addUserGroupResponse")
    @RequestWrapper(localName = "addUserGroup", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.AddUserGroup")
    @WebMethod(action = "urn:addUserGroup")
    @ResponseWrapper(localName = "addUserGroupResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.AddUserGroupResponse")
    public java.lang.Integer addUserGroup(
        @WebParam(name = "newGroup", targetNamespace = "http://service.rews.mainconcept.com")
        com.mainconcept.rewsservice.UserGroup newGroup
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:deRegisterServer", output = "urn:deRegisterServerResponse")
    @RequestWrapper(localName = "deRegisterServer", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.DeRegisterServer")
    @WebMethod(action = "urn:deRegisterServer")
    @ResponseWrapper(localName = "deRegisterServerResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.DeRegisterServerResponse")
    public java.lang.Boolean deRegisterServer(
        @WebParam(name = "uri", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String uri,
        @WebParam(name = "reserved", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String reserved
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:updateBypassOfJob", output = "urn:updateBypassOfJobResponse")
    @RequestWrapper(localName = "updateBypassOfJob", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.UpdateBypassOfJob")
    @WebMethod(action = "urn:updateBypassOfJob")
    @ResponseWrapper(localName = "updateBypassOfJobResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.UpdateBypassOfJobResponse")
    public java.lang.Boolean updateBypassOfJob(
        @WebParam(name = "jobID", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Integer jobID,
        @WebParam(name = "bypass", targetNamespace = "http://service.rews.mainconcept.com")
        com.mainconcept.rewsservice.BypassParameter bypass
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:getAnalyzeResult", output = "urn:getAnalyzeResultResponse")
    @RequestWrapper(localName = "getAnalyzeResult", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetAnalyzeResult")
    @WebMethod(action = "urn:getAnalyzeResult")
    @ResponseWrapper(localName = "getAnalyzeResultResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetAnalyzeResultResponse")
    public java.lang.String getAnalyzeResult(
        @WebParam(name = "taskID", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Integer taskID
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:listUserGroups", output = "urn:listUserGroupsResponse")
    @RequestWrapper(localName = "listUserGroups", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.ListUserGroups")
    @WebMethod(action = "urn:listUserGroups")
    @ResponseWrapper(localName = "listUserGroupsResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.ListUserGroupsResponse")
    public java.util.List<com.mainconcept.rewsservice.UserGroup> listUserGroups(
        @WebParam(name = "username", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String username
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:updateUser", output = "urn:updateUserResponse")
    @RequestWrapper(localName = "updateUser", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.UpdateUser")
    @WebMethod(action = "urn:updateUser")
    @ResponseWrapper(localName = "updateUserResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.UpdateUserResponse")
    public java.lang.Boolean updateUser(
        @WebParam(name = "user", targetNamespace = "http://service.rews.mainconcept.com")
        com.mainconcept.rewsservice.User user,
        @WebParam(name = "oldPassword", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String oldPassword
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:listServerGroups", output = "urn:listServerGroupsResponse")
    @RequestWrapper(localName = "listServerGroups", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.ListServerGroups")
    @WebMethod(action = "urn:listServerGroups")
    @ResponseWrapper(localName = "listServerGroupsResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.ListServerGroupsResponse")
    public java.util.List<com.mainconcept.rewsservice.ServerGroup> listServerGroups(
        @WebParam(name = "reserved", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String reserved
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:rebootServer", output = "urn:rebootServerResponse")
    @RequestWrapper(localName = "rebootServer", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.RebootServer")
    @WebMethod(action = "urn:rebootServer")
    @ResponseWrapper(localName = "rebootServerResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.RebootServerResponse")
    public java.lang.Boolean rebootServer(
        @WebParam(name = "serverName", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String serverName,
        @WebParam(name = "password", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String password,
        @WebParam(name = "abort", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Boolean abort
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:getWFJobSelectPresets", output = "urn:getWFJobSelectPresetsResponse")
    @RequestWrapper(localName = "getWFJobSelectPresets", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetWFJobSelectPresets")
    @WebMethod(action = "urn:getWFJobSelectPresets")
    @ResponseWrapper(localName = "getWFJobSelectPresetsResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetWFJobSelectPresetsResponse")
    public java.util.List<java.lang.String> getWFJobSelectPresets(
        @WebParam(name = "jobID", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Integer jobID
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:setServerLicenses", output = "urn:setServerLicensesResponse")
    @RequestWrapper(localName = "setServerLicenses", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.SetServerLicenses")
    @WebMethod(action = "urn:setServerLicenses")
    @ResponseWrapper(localName = "setServerLicensesResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.SetServerLicensesResponse")
    public java.util.List<java.lang.Long> setServerLicenses(
        @WebParam(name = "serverName", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String serverName,
        @WebParam(name = "products", targetNamespace = "http://service.rews.mainconcept.com")
        java.util.List<java.lang.Long> products
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:verifyLocation", output = "urn:verifyLocationResponse")
    @RequestWrapper(localName = "verifyLocation", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.VerifyLocation")
    @WebMethod(action = "urn:verifyLocation")
    @ResponseWrapper(localName = "verifyLocationResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.VerifyLocationResponse")
    public java.util.List<com.mainconcept.rewsservice.LocationState> verifyLocation(
        @WebParam(name = "locationName", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String locationName,
        @WebParam(name = "serverName", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String serverName
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:getCurrentUser", output = "urn:getCurrentUserResponse")
    @RequestWrapper(localName = "getCurrentUser", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetCurrentUser")
    @WebMethod(action = "urn:getCurrentUser")
    @ResponseWrapper(localName = "getCurrentUserResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.GetCurrentUserResponse")
    public com.mainconcept.rewsservice.User getCurrentUser(
        @WebParam(name = "reserved", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.String reserved
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:addPresetGroup", output = "urn:addPresetGroupResponse")
    @RequestWrapper(localName = "addPresetGroup", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.AddPresetGroup")
    @WebMethod(action = "urn:addPresetGroup")
    @ResponseWrapper(localName = "addPresetGroupResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.AddPresetGroupResponse")
    public java.lang.Integer addPresetGroup(
        @WebParam(name = "newPG", targetNamespace = "http://service.rews.mainconcept.com")
        com.mainconcept.rewsservice.PresetGroup newPG
    );

    @WebResult(name = "return", targetNamespace = "http://service.rews.mainconcept.com")
    @Action(input = "urn:listLogByID", output = "urn:listLogByIDResponse")
    @RequestWrapper(localName = "listLogByID", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.ListLogByID")
    @WebMethod(action = "urn:listLogByID")
    @ResponseWrapper(localName = "listLogByIDResponse", targetNamespace = "http://service.rews.mainconcept.com", className = "com.mainconcept.rewsservice.ListLogByIDResponse")
    public java.lang.String listLogByID(
        @WebParam(name = "taskID", targetNamespace = "http://service.rews.mainconcept.com")
        java.lang.Integer taskID
    );
}
